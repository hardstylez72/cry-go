{
  "swagger": "2.0",
  "info": {
    "title": "v1/flow.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "FlowService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/gw/v1/flow-random/only-preview": {
      "post": {
        "operationId": "FlowService_OnlyRandomFlowPreview",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/OnlyRandomFlowPreviewRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnlyRandomFlowPreviewReq"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow-random/only-preview-tokens": {
      "post": {
        "operationId": "FlowService_OnlyRandomFlowFromTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/OnlyRandomFlowFromTokensRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnlyRandomFlowPreviewReq"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow-shared": {
      "post": {
        "operationId": "FlowService_SharedFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SharedFlowRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedFlowReq"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow-shared/use": {
      "post": {
        "operationId": "FlowService_UseSharedFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UseSharedFlowRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UseSharedFlowReq"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/copy": {
      "post": {
        "operationId": "FlowService_CopyFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CopyFlowRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyFlowReq"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/create": {
      "post": {
        "operationId": "FlowService_CreateFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/delete": {
      "post": {
        "operationId": "FlowService_DeleteFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/get": {
      "post": {
        "operationId": "FlowService_GetFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/hide": {
      "post": {
        "operationId": "FlowService_HideFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/HideFlowRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HideFlowReq"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/list": {
      "post": {
        "operationId": "FlowService_ListFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/preview": {
      "post": {
        "operationId": "FlowService_FlowPreview",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/FlowPreviewRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowPreviewReq"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/publish": {
      "post": {
        "operationId": "FlowService_ShareFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ShareFlowRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShareFlowReq"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/shared/list": {
      "post": {
        "operationId": "FlowService_SharedFlows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SharedFlowsRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedFlowsReq"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/update": {
      "post": {
        "operationId": "FlowService_UpdateFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v2/flow/create": {
      "post": {
        "operationId": "FlowService_CreateFlowV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateFlowV2Res"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFlowV2Req"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v2/flow/get": {
      "post": {
        "operationId": "FlowService_GetFlowV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetFlowV2Res"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetFlowV2Req"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v2/flow/update": {
      "post": {
        "operationId": "FlowService_UpdateFlowV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateFlowV2Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateFlowV2Request"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    }
  },
  "definitions": {
    "AmUni": {
      "type": "object",
      "properties": {
        "gwei": {
          "type": "string"
        },
        "eth": {
          "type": "string"
        },
        "usd": {
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "wei": {
          "type": "string"
        }
      }
    },
    "Amount": {
      "type": "object",
      "properties": {
        "sendAll": {
          "type": "boolean"
        },
        "sendPercent": {
          "type": "number",
          "format": "float"
        },
        "sendAmount": {
          "type": "number",
          "format": "float",
          "title": "deprecated"
        },
        "sendValue": {
          "type": "string"
        },
        "percRange": {
          "$ref": "#/definitions/PercentRange"
        },
        "send": {
          "$ref": "#/definitions/AmUni"
        },
        "balance": {
          "$ref": "#/definitions/AmUni"
        },
        "gasEstimated": {
          "$ref": "#/definitions/AmUni"
        }
      },
      "required": [
        "kind"
      ]
    },
    "Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "CopyFlowReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "CopyFlowRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "CreateFlowRequest": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Task"
          }
        },
        "randomTasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Task"
          }
        }
      },
      "required": [
        "label",
        "tasks",
        "randomTasks"
      ]
    },
    "CreateFlowResponse": {
      "type": "object",
      "properties": {
        "flow": {
          "$ref": "#/definitions/flow.Flow"
        }
      },
      "required": [
        "flow"
      ]
    },
    "CreateFlowV2Req": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "blocks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FlowBlock"
          }
        }
      },
      "required": [
        "label",
        "blocks"
      ]
    },
    "CreateFlowV2Res": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "DefaultBridge": {
      "type": "object",
      "properties": {
        "fromNetwork": {
          "$ref": "#/definitions/Network"
        },
        "toNetwork": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "approveTx": {
          "$ref": "#/definitions/TaskTx"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        },
        "received": {
          "type": "boolean"
        }
      },
      "required": [
        "fromNetwork",
        "toNetwork",
        "fromToken",
        "toToken",
        "amount",
        "received"
      ]
    },
    "DefaultLP": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "a": {
          "$ref": "#/definitions/Token",
          "title": "deprecated"
        },
        "b": {
          "$ref": "#/definitions/Token",
          "title": "deprecated"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        },
        "add": {
          "type": "boolean"
        },
        "approveA": {
          "$ref": "#/definitions/TaskTx",
          "title": "deprecated"
        },
        "approveB": {
          "$ref": "#/definitions/TaskTx",
          "title": "deprecated"
        },
        "tokens": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/LPToken"
          }
        }
      },
      "required": [
        "amount",
        "network",
        "a",
        "b",
        "add",
        "tokens"
      ]
    },
    "DefaultSwap": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        },
        "approveTx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "network",
        "fromToken",
        "toToken"
      ]
    },
    "DelayTask": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "waitFor": {
          "type": "string",
          "format": "date-time"
        },
        "random": {
          "type": "boolean"
        },
        "minRandom": {
          "type": "string",
          "format": "int64"
        },
        "maxRandom": {
          "type": "string",
          "format": "int64"
        },
        "randomDuration": {
          "type": "string"
        }
      },
      "required": [
        "duration",
        "random"
      ]
    },
    "DeleteFlowRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "DeleteFlowResponse": {
      "type": "object"
    },
    "DeployStarkNetAccountTask": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "network",
        "tx"
      ]
    },
    "ExchangeSwapTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "withdrawerId": {
          "type": "string"
        },
        "tradeId": {
          "type": "string"
        },
        "pair": {
          "type": "string"
        },
        "before": {
          "type": "boolean"
        },
        "after": {
          "type": "boolean"
        },
        "swapCompleted": {
          "type": "boolean"
        }
      },
      "required": [
        "amount",
        "withdrawerId",
        "fromToken",
        "toToken"
      ]
    },
    "FlowBase": {
      "type": "object",
      "properties": {
        "token": {
          "$ref": "#/definitions/Token"
        }
      }
    },
    "FlowBlock": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "string",
          "format": "int64"
        },
        "man": {
          "$ref": "#/definitions/FlowBlockMan"
        },
        "rand": {
          "$ref": "#/definitions/FlowBlockRand"
        }
      },
      "required": [
        "weight",
        "block"
      ]
    },
    "FlowBlockMan": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Task"
          }
        },
        "randomTasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Task"
          }
        }
      },
      "required": [
        "tasks",
        "randomTasks"
      ]
    },
    "FlowBlockRand": {
      "type": "object",
      "properties": {
        "startToken": {
          "$ref": "#/definitions/Token"
        },
        "finishToken": {
          "$ref": "#/definitions/Token"
        },
        "startNetwork": {
          "$ref": "#/definitions/Network"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RandomTask"
          }
        },
        "taskCount": {
          "type": "string",
          "format": "int64"
        },
        "minDelay": {
          "type": "string",
          "format": "int64"
        },
        "maxDelay": {
          "type": "string",
          "format": "int64"
        },
        "nativeTokenMinPercent": {
          "type": "string",
          "format": "int64"
        },
        "nativeTokenMaxPercent": {
          "type": "string",
          "format": "int64"
        },
        "nonnativeTokenMinPercent": {
          "type": "string",
          "format": "int64"
        },
        "nonnativeTokenMaxPercent": {
          "type": "string",
          "format": "int64"
        }
      },
      "required": [
        "tasks",
        "random_tasks",
        "maxDelay",
        "minDelay"
      ]
    },
    "FlowListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "nextId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string",
          "format": "int64"
        }
      },
      "required": [
        "id",
        "label",
        "createdAt",
        "version"
      ]
    },
    "FlowPreviewReq": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "blocks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FlowBlock"
          }
        }
      },
      "required": [
        "label",
        "blocks"
      ]
    },
    "FlowPreviewRes": {
      "type": "object",
      "properties": {
        "flow": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UniqueFlow"
          }
        },
        "uniquePercent": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "flow",
        "uniquePercent"
      ]
    },
    "FlowShared": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Task"
          }
        },
        "creatorId": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "description",
        "label",
        "parentId",
        "createdAt",
        "tasks",
        "creatorId"
      ]
    },
    "GetFlowRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "GetFlowResponse": {
      "type": "object",
      "properties": {
        "flow": {
          "$ref": "#/definitions/flow.Flow"
        }
      },
      "required": [
        "flow"
      ]
    },
    "GetFlowV2Req": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "GetFlowV2Res": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "blocks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FlowBlock"
          }
        }
      },
      "required": [
        "id",
        "label",
        "blocks"
      ]
    },
    "HideFlowReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "HideFlowRes": {
      "type": "object"
    },
    "LPToken": {
      "type": "object",
      "properties": {
        "token": {
          "$ref": "#/definitions/Token"
        },
        "approveTx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "token"
      ]
    },
    "LiquidityBridgeTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "fromNetwork": {
          "$ref": "#/definitions/Network"
        },
        "toNetwork": {
          "$ref": "#/definitions/Network"
        },
        "token": {
          "$ref": "#/definitions/Token"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        },
        "approveTx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "fromNetwork",
        "toNetwork",
        "token"
      ]
    },
    "ListFlowRequest": {
      "type": "object"
    },
    "ListFlowResponse": {
      "type": "object",
      "properties": {
        "flows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FlowListItem"
          }
        }
      },
      "required": [
        "flows"
      ]
    },
    "MerklyMintAndBridgeNFTTask": {
      "type": "object",
      "properties": {
        "fromNetwork": {
          "$ref": "#/definitions/Network"
        },
        "toNetwork": {
          "$ref": "#/definitions/Network"
        },
        "mintTx": {
          "$ref": "#/definitions/TaskTx"
        },
        "bridgeTx": {
          "$ref": "#/definitions/TaskTx"
        },
        "nftId": {
          "type": "string"
        },
        "fee": {
          "type": "string",
          "title": "deprecated"
        }
      },
      "required": [
        "fromNetwork",
        "toNetwork",
        "mintTx",
        "bridgeTx"
      ]
    },
    "MockTask": {
      "type": "object",
      "title": "deprecated"
    },
    "Network": {
      "type": "string",
      "enum": [
        "ARBITRUM",
        "OPTIMISM",
        "BinanaceBNB",
        "Etherium",
        "POLIGON",
        "AVALANCHE",
        "GOERLIETH",
        "ZKSYNCERA",
        "ZKSYNCERATESTNET",
        "ZKSYNCLITE",
        "StarkNet",
        "Meter",
        "Tenet",
        "Canto",
        "ArbitrumNova",
        "PolygonZKEVM",
        "Fantom",
        "Base",
        "opBNB",
        "Linea",
        "Zora",
        "Core",
        "Conflux",
        "Fuse",
        "Loot",
        "Klaytn",
        "Celo",
        "Shimmer",
        "DFK"
      ],
      "default": "ARBITRUM",
      "title": "- ZKSYNCERATESTNET: deprecated"
    },
    "OkexBinanaceTask": {
      "type": "object",
      "properties": {
        "okexWithdrawerId": {
          "type": "string"
        },
        "okexToken": {
          "type": "string"
        },
        "okexNetwork": {
          "type": "string"
        },
        "binanaceDepositAddr": {
          "type": "string"
        },
        "txId": {
          "type": "string"
        },
        "withdrawTxId": {
          "type": "string"
        }
      },
      "title": "deprecated",
      "required": [
        "okexWithdrawerId",
        "binanaceWithdrawerId",
        "okexNetwork",
        "okexToken",
        "binanaceDepositAddr"
      ]
    },
    "OkexDepositTask": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        },
        "okexAccName": {
          "type": "string",
          "title": "deprecated"
        },
        "okexAddr": {
          "type": "string",
          "title": "deprecated"
        },
        "token": {
          "$ref": "#/definitions/Token"
        },
        "address": {
          "type": "string"
        },
        "txId": {
          "type": "string",
          "title": "deprecated"
        },
        "txComplete": {
          "type": "boolean",
          "title": "deprecated"
        },
        "subMainTransfer": {
          "type": "boolean"
        },
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        },
        "approveTx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "network",
        "token"
      ]
    },
    "OnlyRandomFlowFromTokensRes": {
      "type": "object",
      "properties": {
        "tokens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Token"
          }
        }
      },
      "required": [
        "tokens"
      ]
    },
    "OnlyRandomFlowPreviewReq": {
      "type": "object",
      "properties": {
        "startToken": {
          "$ref": "#/definitions/Token"
        },
        "finishToken": {
          "$ref": "#/definitions/Token"
        },
        "startNetwork": {
          "$ref": "#/definitions/Network"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RandomTask"
          }
        },
        "taskCount": {
          "type": "string",
          "format": "int64"
        },
        "ignoreStartToken": {
          "type": "boolean"
        },
        "ignoreFinishToken": {
          "type": "boolean"
        },
        "minDelay": {
          "type": "string",
          "format": "int64"
        },
        "maxDelay": {
          "type": "string",
          "format": "int64"
        }
      },
      "required": [
        "label",
        "blocks",
        "minDelay",
        "maxDelay"
      ]
    },
    "OnlyRandomFlowPreviewRes": {
      "type": "object",
      "properties": {
        "flow": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UniqueFlow"
          }
        },
        "uniquePercent": {
          "type": "number",
          "format": "double"
        },
        "tokens": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TokenArr"
          }
        }
      },
      "required": [
        "flow",
        "uniquePercent",
        "tokens"
      ]
    },
    "OrbiterBridgeTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "fromNetwork": {
          "$ref": "#/definitions/Network"
        },
        "toNetwork": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "txCompleted": {
          "type": "boolean",
          "title": "deprecated"
        },
        "txId": {
          "type": "string",
          "title": "deprecated"
        },
        "orbiterReceiverAddr": {
          "type": "string"
        },
        "orbiterSenderAddr": {
          "type": "string"
        },
        "swapCompleted": {
          "type": "boolean",
          "title": "deprecated"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "fromNetwork",
        "toNetwork",
        "fromToken",
        "toToken"
      ]
    },
    "PercentRange": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string",
          "format": "int64"
        },
        "max": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ProcessStatus": {
      "type": "string",
      "enum": [
        "StatusReady",
        "StatusRunning",
        "StatusError",
        "StatusDone",
        "StatusStop",
        "StatusRetry"
      ],
      "default": "StatusReady",
      "title": "- StatusStop: delete"
    },
    "RPsimple": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        }
      },
      "required": [
        "network"
      ]
    },
    "RPswap": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RPswapItem"
          }
        }
      },
      "required": [
        "items"
      ]
    },
    "RPswapItem": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        },
        "from": {
          "$ref": "#/definitions/Token"
        },
        "to": {
          "$ref": "#/definitions/Token"
        },
        "am": {
          "$ref": "#/definitions/Amount"
        }
      },
      "required": [
        "network",
        "from",
        "to"
      ]
    },
    "RandomTask": {
      "type": "object",
      "properties": {
        "optional": {
          "type": "boolean"
        },
        "taskType": {
          "$ref": "#/definitions/TaskType"
        },
        "swap": {
          "$ref": "#/definitions/RPswap"
        },
        "simple": {
          "$ref": "#/definitions/RPsimple"
        }
      },
      "required": [
        "optional",
        "taskType",
        "p"
      ]
    },
    "ShareFlowReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "description"
      ]
    },
    "ShareFlowRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "SharedFlowReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "SharedFlowRes": {
      "type": "object",
      "properties": {
        "flow": {
          "$ref": "#/definitions/FlowShared"
        }
      },
      "required": [
        "flow"
      ]
    },
    "SharedFlowsReq": {
      "type": "object"
    },
    "SharedFlowsRes": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FlowShared"
          }
        }
      },
      "required": [
        "items"
      ]
    },
    "SimpleTask": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        },
        "approveTx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "network"
      ]
    },
    "SnapshotVoteProposal": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/ProcessStatus"
        },
        "msg": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "retryCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SnapshotVoteTask": {
      "type": "object",
      "properties": {
        "space": {
          "type": "string"
        },
        "proposal": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SnapshotVoteProposal"
          }
        }
      },
      "required": [
        "proposal",
        "space"
      ]
    },
    "StargateBridgeTask": {
      "type": "object",
      "properties": {
        "fromNetwork": {
          "$ref": "#/definitions/Network"
        },
        "toNetwork": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "fee": {
          "type": "string",
          "title": "deprecated"
        },
        "txId": {
          "type": "string",
          "title": "deprecated"
        },
        "layerZeroStatus": {
          "type": "string"
        },
        "lzscanUrl": {
          "type": "string"
        },
        "txCompleted": {
          "type": "boolean",
          "title": "deprecated"
        },
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "fromNetwork",
        "toNetwork",
        "fromToken",
        "toToken",
        "amount"
      ]
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Any"
          }
        }
      }
    },
    "Swap1inchTask": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        },
        "fromTokenName": {
          "type": "string"
        },
        "fromTokenCode": {
          "type": "string"
        },
        "fromTokenAddr": {
          "type": "string"
        },
        "toTokenName": {
          "type": "string"
        },
        "toTokenCode": {
          "type": "string"
        },
        "toTokenAddr": {
          "type": "string"
        },
        "sendAll": {
          "type": "boolean"
        },
        "sendPercent": {
          "type": "string",
          "format": "int64"
        },
        "sendAmount": {
          "type": "number",
          "format": "float"
        },
        "txId": {
          "type": "string"
        },
        "txCompleted": {
          "type": "boolean"
        },
        "swapCompleted": {
          "type": "boolean"
        }
      },
      "required": [
        "network",
        "fromTokenName",
        "fromTokenCode",
        "fromTokenAddr",
        "toTokenName",
        "toTokenCode",
        "toTokenAddr",
        "amount"
      ]
    },
    "Task": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "string",
          "format": "int64"
        },
        "taskType": {
          "$ref": "#/definitions/TaskType"
        },
        "description": {
          "type": "string"
        },
        "stargateBridgeTask": {
          "$ref": "#/definitions/StargateBridgeTask"
        },
        "mockTask": {
          "$ref": "#/definitions/MockTask",
          "title": "deprecated"
        },
        "delayTask": {
          "$ref": "#/definitions/DelayTask"
        },
        "withdrawExchangeTask": {
          "$ref": "#/definitions/WithdrawExchangeTask"
        },
        "okexDepositTask": {
          "$ref": "#/definitions/OkexDepositTask"
        },
        "testNetBridgeSwapTask": {
          "$ref": "#/definitions/TestNetBridgeSwapTask"
        },
        "snapshotVoteTask": {
          "$ref": "#/definitions/SnapshotVoteTask"
        },
        "okexBinanaceTask": {
          "$ref": "#/definitions/OkexBinanaceTask",
          "title": "deprecated"
        },
        "swap1inchTask": {
          "$ref": "#/definitions/Swap1inchTask",
          "title": "deprecated"
        },
        "syncSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "zkSyncOfficialBridgeToEthereumTask": {
          "$ref": "#/definitions/ZkSyncOfficialBridgeToEthereumTask"
        },
        "orbiterBridgeTask": {
          "$ref": "#/definitions/OrbiterBridgeTask"
        },
        "zkSyncOfficialBridgeFromEthereumTask": {
          "$ref": "#/definitions/ZkSyncOfficialBridgeFromEthereumTask"
        },
        "wETHTask": {
          "$ref": "#/definitions/WETHTask",
          "title": "deprecated"
        },
        "muteioSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "syncSwapLPTask": {
          "$ref": "#/definitions/DefaultLP"
        },
        "maverickSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "spaceFiSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "velocoreSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "izumiSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "veSyncSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "ezkaliburSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "zkSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "traderJoeSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "merklyMintAndBridgeNFTTask": {
          "$ref": "#/definitions/MerklyMintAndBridgeNFTTask"
        },
        "deployStarkNetAccountTask": {
          "$ref": "#/definitions/DeployStarkNetAccountTask"
        },
        "swap10k": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "pancakeSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "sithSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "jediSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "mySwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "protosSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "starkNetBridgeTask": {
          "$ref": "#/definitions/LiquidityBridgeTask"
        },
        "dmailTask": {
          "$ref": "#/definitions/SimpleTask"
        },
        "starkNetIdMintTask": {
          "$ref": "#/definitions/SimpleTask"
        },
        "odosSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "acrossBridgeTask": {
          "$ref": "#/definitions/DefaultBridge"
        },
        "avnuSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "fibrousSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "exchangeSwapTask": {
          "$ref": "#/definitions/ExchangeSwapTask"
        },
        "zkLendLPTask": {
          "$ref": "#/definitions/DefaultLP"
        },
        "woofiSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "aaveLPTask": {
          "$ref": "#/definitions/DefaultLP"
        },
        "mintFunTask": {
          "$ref": "#/definitions/SimpleTask"
        },
        "mintMerklyTask": {
          "$ref": "#/definitions/SimpleTask"
        },
        "mintZeriusTask": {
          "$ref": "#/definitions/SimpleTask"
        },
        "kyberSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "ekuboSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "nostraLPTask": {
          "$ref": "#/definitions/DefaultLP"
        },
        "wethSwapTask": {
          "$ref": "#/definitions/DefaultSwap"
        },
        "coreDaoBridge": {
          "$ref": "#/definitions/DefaultBridge"
        },
        "stargateBridge": {
          "$ref": "#/definitions/DefaultBridge"
        },
        "stakeSTG": {
          "$ref": "#/definitions/DefaultLP"
        },
        "merklyRefuel": {
          "$ref": "#/definitions/DefaultBridge"
        },
        "l2passRefuel": {
          "$ref": "#/definitions/DefaultBridge"
        },
        "starknetClaim": {
          "$ref": "#/definitions/SimpleTask"
        },
        "eralendLPTask": {
          "$ref": "#/definitions/DefaultLP"
        }
      },
      "required": [
        "weight",
        "taskType",
        "description"
      ]
    },
    "TaskTx": {
      "type": "object",
      "properties": {
        "txCompleted": {
          "type": "boolean"
        },
        "txId": {
          "type": "string"
        },
        "retryCount": {
          "type": "string",
          "format": "int64"
        },
        "url": {
          "type": "string",
          "title": "mandatory"
        },
        "network": {
          "$ref": "#/definitions/Network",
          "title": "mandatory"
        },
        "code": {
          "type": "string",
          "title": "mandatory"
        },
        "gasEstimated": {
          "$ref": "#/definitions/AmUni",
          "title": "deprecated"
        },
        "gasResult": {
          "$ref": "#/definitions/AmUni",
          "title": "deprecated"
        },
        "gasLimit": {
          "$ref": "#/definitions/AmUni",
          "title": "deprecated"
        },
        "multiplier": {
          "type": "number",
          "format": "float"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TxDetail"
          }
        },
        "ts": {
          "type": "string",
          "format": "int64"
        },
        "completeTs": {
          "type": "string",
          "format": "int64"
        }
      },
      "required": [
        "txCompleted",
        "txId",
        "retryCount",
        "details"
      ]
    },
    "TaskType": {
      "type": "string",
      "enum": [
        "StargateBridge",
        "Mock",
        "Delay",
        "WithdrawExchange",
        "OkexDeposit",
        "TestNetBridgeSwap",
        "SnapshotVote",
        "OkexBinance",
        "Swap1inch",
        "SyncSwap",
        "ZkSyncOfficialBridgeToEthereum",
        "OrbiterBridge",
        "ZkSyncOfficialBridgeFromEthereum",
        "WETH",
        "MuteioSwap",
        "SyncSwapLP",
        "MaverickSwap",
        "SpaceFISwap",
        "VelocoreSwap",
        "IzumiSwap",
        "VeSyncSwap",
        "EzkaliburSwap",
        "ZkSwap",
        "TraderJoeSwap",
        "MerklyMintAndBridgeNFT",
        "DeployStarkNetAccount",
        "Swap10k",
        "PancakeSwap",
        "SithSwap",
        "JediSwap",
        "MySwap",
        "ProtossSwap",
        "StarkNetBridge",
        "Dmail",
        "StarkNetIdMint",
        "OdosSwap",
        "AcrossBridge",
        "AvnuSwap",
        "FibrousSwap",
        "ExchangeSwap",
        "ZkLendLP",
        "WoofiSwap",
        "AaveLP",
        "MintFun",
        "MintMerkly",
        "MintZerius",
        "KyberSwap",
        "EkuboSwap",
        "NostraLP",
        "CoreDaoBridge",
        "StakeSTG",
        "MerklyRefuel",
        "L2PassRefuel",
        "StarknetClaim",
        "EraLend"
      ],
      "default": "StargateBridge",
      "title": "- OkexBinance: deprecated"
    },
    "TestNetBridgeSwapTask": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        },
        "minAmount": {
          "type": "string"
        },
        "maxAmount": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "network",
        "minAmount",
        "maxAmount"
      ]
    },
    "Token": {
      "type": "string",
      "enum": [
        "USDT",
        "ETH",
        "USDC",
        "STG",
        "BNB",
        "MATIC",
        "AVAX",
        "veSTG",
        "WETH",
        "LUSD",
        "LSD",
        "MUTE",
        "MAV",
        "SPACE",
        "VC",
        "IZI",
        "USDCBridged",
        "BUSD",
        "USDp",
        "CORE",
        "CFX",
        "FUSE",
        "AGLD",
        "KLAY",
        "CELO",
        "SMR",
        "JEWEL",
        "STRK"
      ],
      "default": "USDT"
    },
    "TokenArr": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/Token"
        },
        "to": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Token"
          }
        }
      },
      "required": [
        "from",
        "to"
      ]
    },
    "TxDetail": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "UniqueFlow": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Task"
          }
        }
      },
      "required": [
        "tasks"
      ]
    },
    "UpdateFlowRequest": {
      "type": "object",
      "properties": {
        "flow": {
          "$ref": "#/definitions/flow.Flow"
        }
      },
      "required": [
        "flow"
      ]
    },
    "UpdateFlowResponse": {
      "type": "object",
      "properties": {
        "flow": {
          "$ref": "#/definitions/flow.Flow"
        }
      },
      "required": [
        "flow"
      ]
    },
    "UpdateFlowV2Request": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "blocks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FlowBlock"
          }
        }
      },
      "required": [
        "id",
        "label",
        "blocks"
      ]
    },
    "UpdateFlowV2Response": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "blocks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FlowBlock"
          }
        }
      },
      "required": [
        "id",
        "label",
        "blocks"
      ]
    },
    "UseSharedFlowReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "UseSharedFlowRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "WETHTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "wrap": {
          "type": "boolean"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "network",
        "wrap"
      ]
    },
    "WithdrawExchangeTask": {
      "type": "object",
      "properties": {
        "withdrawerId": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "amountMin": {
          "type": "string"
        },
        "amountMax": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "withdrawOrderId": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "txId": {
          "type": "string"
        },
        "withdrawAddr": {
          "type": "string"
        },
        "useExternalAddr": {
          "type": "boolean"
        },
        "sendAllCoins": {
          "type": "boolean"
        },
        "sendToRelatedProfile": {
          "type": "boolean"
        }
      },
      "required": [
        "withdrawerId",
        "network",
        "amountMin",
        "amountMax",
        "token",
        "withdrawOrderId"
      ]
    },
    "ZkSyncOfficialBridgeFromEthereumTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "txCompleted": {
          "type": "boolean",
          "title": "deprecated"
        },
        "txId": {
          "type": "string",
          "title": "deprecated"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount"
      ]
    },
    "ZkSyncOfficialBridgeToEthereumTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "amountKind": {
          "type": "string",
          "title": "deprecated"
        },
        "txCompleted": {
          "type": "boolean",
          "title": "deprecated"
        },
        "txId": {
          "type": "string",
          "title": "deprecated"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "network",
        "amountKind"
      ]
    },
    "flow.Flow": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Task"
          }
        },
        "nextId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "randomTasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Task"
          }
        },
        "base": {
          "$ref": "#/definitions/FlowBase"
        }
      },
      "required": [
        "id",
        "label",
        "payload",
        "createdAt",
        "tasks",
        "randomTasks"
      ]
    }
  }
}
