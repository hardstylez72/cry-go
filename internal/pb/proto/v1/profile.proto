syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "v1/flow.proto";
import "v1/shared.proto";

package profile;
option go_package = "grpc/v1";

enum ProfileType {
  EVM  = 0;
  StarkNet = 1;
}

enum ProfileSubType {
  Metamask  = 0;
  UrgentX = 1;
  Braavos = 2;
}

message Profile {
  string id = 1;
  string label = 2;
  optional string proxy = 3;
  string mmsk_id = 4;
  optional string meta = 5;
  google.protobuf.Timestamp created_at = 6;
  optional OkexAccount okex_account = 7; //deprecated
  string user_agent = 8;
  int64 num = 9;
  optional google.protobuf.Timestamp deleted_at = 10;
  ProfileType type = 11;
  ProfileSubType sub_type = 12;

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["id", "label", "meta", "created_at", "mmsk_id", "user_agent", "num", "type", "sub_type"]
    }
  };
}

message OkexAccount {
  string sub_acc_name = 1;
  string deposit_addr = 2;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["sub_acc_name", "deposit_addr"]
    }
  };
}

service ProfileService {
  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse) {
    option (google.api.http) = {
      post: "/api/gw/v1/profile/update",
      body: "*"
    };
  }
  rpc ValidateLabel(ValidateLabelRequest) returns (ValidateLabelResponse) {
    option (google.api.http) = {
      post: "/api/gw/v1/profile/label/validate",
      body: "*"
    };
  }
  rpc GetBalance(GetBalanceRequest) returns (GetBalanceResponse) {
    option (google.api.http) = {
      post: "/api/gw/v1/profile/balance",
      body: "*"
    };
  }
  rpc SearchProfile(SearchProfileRequest) returns (SearchProfileResponse) {
    option (google.api.http) = {
      post: "/api/gw/v1/profile/search",
      body: "*"
    };
  }
  rpc SearchProfilesNotConnectedToOkexDeposit(SearchProfilesNotConnectedToOkexDepositRequest) returns (SearchProfilesNotConnectedToOkexDepositResponse) {
    option (google.api.http) = {
      post: "/api/gw/v1/profile/not_connected_okex/search",
      body: "*"
    };
  }
  rpc CreateProfile(CreateProfileRequest) returns (CreateProfileResponse) {
    option (google.api.http) = {
      post: "/api/gw/v1/profile/add",
      body: "*"
    };
  }
  rpc ListProfile(ListProfileRequest) returns (ListProfileResponse) {
    option (google.api.http) = {
      post: "/api/gw/v1/profile/list",
      body: "*"
    };
  }
  rpc DeleteProfile(DeleteProfileRequest) returns (DeleteProfileResponse) {
    option (google.api.http) = {
      post: "/api/gw/v1/profile/delete",
      body: "*"
    };
  }
  rpc GetProfile(GetProfileRequest) returns (GetProfileResponse) {
    option (google.api.http) = {
      post: "/api/gw/v1/profile/get",
      body: "*"
    };
  }
  rpc ExportProfiles(ExportProfilesReq) returns (ExportProfilesRes) {
    option (google.api.http) = {
      post: "/api/gw/v1/profile/export",
      body: "*"
    };
  }
  rpc GenerateProfiles(GenerateProfilesReq) returns (GenerateProfilesRes) {
    option (google.api.http) = {
      post:"/api/gw/v1/profile/generate",
      body: "*"
    };
  }
  rpc StarkNetAccountDeployed(StarkNetAccountDeployedReq) returns (StarkNetAccountDeployedRes) {
    option (google.api.http) = {
      post:"/api/gw/v1/profile/starknet/deployed",
      body: "*"
    };
  }

  rpc GetProfileRelations(GetProfileRelationsReq) returns (GetProfileRelationsRes) {
    option (google.api.http) = {
      post:"/api/gw/v1/profile/relations/list",
      body: "*"
    };
  }
  rpc DeleteProfileRelation(DeleteProfileRelationReq) returns (DeleteProfileRelationRes) {
    option (google.api.http) = {
      post:"/api/gw/v1/profile/relations/delete",
      body: "*"
    };
  }
  rpc AddProfileRelation(AddProfileRelationReq) returns (AddProfileRelationRes) {
    option (google.api.http) = {
      post:"/api/gw/v1/profile/relations/add",
      body: "*"
    };
  }
  rpc SearchProfileRelation(SearchProfileRelationReq) returns (SearchProfileRelationRes) {
    option (google.api.http) = {
      post:"/api/gw/v1/profile/relations/search",
      body: "*"
    };
  }

}

message SearchProfileRelationReq {
  profile.ProfileType p1_type = 1;
  profile.ProfileType p2_type = 2;
  profile.ProfileSubType p1_sub_type = 3;
  profile.ProfileSubType p2_sub_type = 4;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["p1_type", "p2_type", "p1_sub_type", "p2_sub_type"]
    }
  };
}

message SearchProfileRelationRes {
  repeated UnrelatedProfile items = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["items"]
    }
  };
}

message UnrelatedProfile {
  string id = 1;
  profile.ProfileSubType  sub_type = 2;
  profile.ProfileType  type = 3;
  int64  num = 4;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["id", "sub_type", "type", "num"]
    }
  };
}

message AddProfileRelationReq {
  profile.ProfileType p1_type = 1;
  profile.ProfileType p2_type = 2;
  profile.ProfileSubType p1_sub_type = 3;
  profile.ProfileSubType p2_sub_type = 4;
  string p1_id = 5;
  string p2_id = 6;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["p1_type", "p2_type", "p1_sub_type", "p2_sub_type", "p1_id", "p2_id"]
    }
  };
}

message AddProfileRelationRes {

}

message DeleteProfileRelationReq {
  profile.ProfileType p1_type = 1;
  profile.ProfileType p2_type = 2;
  profile.ProfileSubType p1_sub_type = 3;
  profile.ProfileSubType p2_sub_type = 4;
  string p1_id = 5;
  string p2_id = 6;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["p1_type", "p2_type", "p1_sub_type", "p2_sub_type", "p1_id", "p2_id"]
    }
  };
}

message DeleteProfileRelationRes{}
message GetProfileRelationsReq {
  profile.ProfileType p1_type = 1;
  profile.ProfileType p2_type = 2;
  profile.ProfileSubType p1_sub_type = 3;
  profile.ProfileSubType p2_sub_type = 4;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["p1_type", "p2_type", "p1_sub_type", "p2_sub_type"]
    }
  };
}

message GetProfileRelationsRes {
  repeated ProfileRelation items = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["items"]
    }
  };
}

message ProfileRelation {
  profile.ProfileType type = 1;
  profile.ProfileSubType sub_type = 2;
  string id = 3;
  optional UnrelatedProfile rel = 4;
  int64 num = 5;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["type", "sub_type", "id", "num"]
    }
  };
}

message StarkNetAccountDeployedReq {
  string profile_id = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["profile_id"]
    }
  };
}

message StarkNetAccountDeployedRes {
  bool deployed = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["deployed"]
    }
  };
}

message GenerateProfilesReq {
  int64 count = 1;
  ProfileType type = 2;
  ProfileSubType sub_type = 3;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["count", "type", "sub_type"]
    }
  };
}

message GenerateProfilesRes {
  string text = 1;
  string preview = 2;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["text", "preview"]
    }
  };
}

message ExportProfilesReq {}

message ExportProfilesRes {
  string text = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["text"]
    }
  };
}

message UpdateProfileResponse {
  profile.Profile profile = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["profile"]
    }
  };
}

message UpdateProfileRequest {
  string profile_id = 1;
  optional string proxy = 2;
  optional string meta = 3;
  optional profile.OkexAccount okex_account = 4; // deprecated
  string label = 5;
  string user_agent = 6;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["profile_id", "label", "user_agent"]
    }
  };
}



message ValidateLabelRequest {
  string label = 1;
  optional string profile_id = 2;

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["label"]
    }
  };
}

message ValidateLabelResponse {
  bool valid = 1;

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["valid"]
    }
  };
}

message GetProfileRequest {
  string profile_id = 1;

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["profile_id"]
    }
  };
}

message GetProfileResponse {
  profile.Profile profile = 1;

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["profile"]
    }
  };
}

message GetBalanceRequest {
  string profile_id = 1;
  shared.Network network = 2;

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["profile_id", "network"]
    }
  };
}


message GetBalanceResponse {
  repeated Balance balance = 1;

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["balance"]
    }
  };
}


message Balance {
  shared.Token token = 1;
  string amount = 2;
  string wei = 3;
  optional string error = 4;

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["token", "amount", "wei"]
    }
  };
}

message SearchProfilesNotConnectedToOkexDepositRequest {

}

message SearchProfilesNotConnectedToOkexDepositResponse {
  repeated profile.Profile profiles = 1;

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["profiles"]
    }
  };
}

message SearchProfileRequest {
  string pattern = 1;
  ProfileType type = 2;

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["pattern", "type"]
    }
  };
}

message SearchProfileResponse {
  repeated profile.Profile profiles = 2;

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["profiles"]
    }
  };
}

message CreateProfileRequest {
  string label = 1;
  optional string proxy = 2;
  string mmsk_pk = 3;
  optional string meta = 4;
  optional profile.OkexAccount okex_account = 5;
  ProfileType type = 6;
  ProfileSubType sub_type = 7;

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["label", "mmsk_pk", "type", "sub_type"]
    }
  };
}

message CreateProfileResponse {
    profile.Profile profile = 1;
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        required: ["profile"]
      }
    };
}

message ListProfileRequest {
  ProfileType type = 1;
  int64 offset = 2;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["type", "offset"]
    }
  };
}

message ListProfileResponse {
  repeated profile.Profile profiles = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["profiles"]
    }
  };
}

message DeleteProfileRequest {
  string id = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["id"]
    }
  };
}

message DeleteProfileResponse {

}