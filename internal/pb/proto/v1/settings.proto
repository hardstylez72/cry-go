syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "v1/shared.proto";
import "v1/task.proto";

package settings;
option go_package = "grpc/v1";

message TaskSettings {
  optional string slippage = 1;
  optional string swapRateRatio = 2;
  optional bool swapUseExchangeRate = 3;
}

message NetworkSettings {

  string id = 1;
  string rpc_endpoint = 2;
  double gas_multiplier = 3;
  string max_gas = 4;
  map<string, TaskSettings> task_settings = 5;
  shared.Network network = 6;
  AutoRefuel auto_refuel = 7;


  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "id", "rpc_endpoint", "task_settings", "gas_multiplier", "max_gas", "network"
      ]
    }
  };
}

message AutoRefuel {
  bool enabled = 1;
  double min = 2;
  double max = 3;
  string withdrawer_id = 4;
}


service SettingsService {

  rpc ResetSettings(ResetRequest) returns (ResetResponse) {
    option (google.api.http) = {
      post: "/api/gw/v1/settings/reset",
      body: "*"
    };
  }

  rpc GetSettings(GetSettingsRequest) returns (GetSettingsResponse) {
    option (google.api.http) = {
      post: "/api/gw/v1/settings/get",
      body: "*"
    };
  }

  rpc UpdateSettings(UpdateSettingsRequest) returns (UpdateSettingsResponse) {
    option (google.api.http) = {
      post: "/api/gw/v1/settings/update",
      body: "*"
    };
  }
}

message ResetRequest {
  shared.Network network = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["network"]
    }
  };
}

message ResetResponse {
  NetworkSettings settings = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["settings"]
    }
  };
}

message UpdateSettingsRequest {
  NetworkSettings settings = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["settings"]
    }
  };
}

message UpdateSettingsResponse {
  NetworkSettings settings = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["settings"]
    }
  };
}

message GetSettingsRequest {
  shared.Network network = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["network"]
    }
  };
}

message GetSettingsResponse {
  NetworkSettings settings = 1;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["settings"]
    }
  };
}

